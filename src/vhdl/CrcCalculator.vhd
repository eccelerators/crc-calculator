-- Copyright (C) 2023 Eccelerators GmbH
-- 
-- This code was generated by:
--
-- HxS Compiler 1.0.19-10671667
-- VHDL Extension for HxS v0.0.0-0000000
-- 
-- Further information at https://eccelerators.com/hxs
-- 
-- Changes to this file may cause incorrect behavior and will be lost if the
-- code is regenerated.
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.CrcCalculatorIfcPackage.all;

entity CrcCalculator is
    port(
        Clk            : in  std_logic;
        Rst            : in  std_logic;
        Axi4LiteDown   : in  T_CrcCalculatorIfcAxi4LiteDown;
        Axi4LiteUp     : out T_CrcCalculatorIfcAxi4LiteUp;
        Axi4LiteAccess : out T_CrcCalculatorIfcAxi4LiteAccess;
        Trace          : out T_CrcCalculatorIfcTrace
    );
end;

architecture Behavioural of CrcCalculator is

    signal InitialValue       : std_logic_vector(31 downto 0);
    signal DataValue          : std_logic_vector(31 downto 0);
    signal HasBeenInitialized : std_logic;

    signal CrcCalculatorBlkDown : T_CrcCalculatorIfcCrcCalculatorBlkDown;
    signal CrcCalculatorBlkUp   : T_CrcCalculatorIfcCrcCalculatorBlkUp;

begin

    CrcCalculatorIfcAxi4Lite_i : entity work.CrcCalculatorIfcAxi4Lite
        port map(
            Clk                  => Clk,
            Rst                  => Rst,
            Axi4LiteDown         => Axi4LiteDown,
            Axi4LiteUp           => Axi4LiteUp,
            Axi4LiteAccess       => Axi4LiteAccess,
            Trace                => Trace,
            CrcCalculatorBlkDown => CrcCalculatorBlkDown,
            CrcCalculatorBlkUp   => CrcCalculatorBlkUp
        );

    crc_i : entity work.crc
        port map(
            crcIn  => InitialValue,
            data   => CrcCalculatorBlkDown.CrcDataWritten,
            crcOut => CrcCalculatorBlkUp.CrcDataToBeRead
        );

    CrcValueProvider : process(Clk, Rst) is
    begin
        if Rst = '1' then
            InitialValue       <= (others => '0');
            HasBeenInitialized <= '0';
        elsif rising_edge(Clk) then
            if CrcCalculatorBlkDown.WRegPulseCRC_DR = '1' then
                if HasBeenInitialized = '0' then
                    InitialValue       <= CrcCalculatorBlkDown.CrcInitialValue;
                    HasBeenInitialized <= '1';
                else
                    InitialValue <= CrcCalculatorBlkUp.CrcDataToBeRead;
                end if;
            end if;
        end if;
    end process;

end;
